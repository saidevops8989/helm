#helm repo add bitnami https://charts.bitnami.com/bitnami

#helm repo add bitnami https://charts.bitnami.com/bitnami
"bitnami" has been added to your repositories

#helm repo remove hashicorp
"hashicorp" has been removed from your repositories

#helm search repo wordpress
NAME                    CHART VERSION   APP VERSION     DESCRIPTION                                       
bitnami/wordpress       23.1.15         6.6.2           WordPress is the world's most popular blogging ...
bitnami/wordpress-intel 2.1.31          6.1.1           DEPRECATED WordPress for Intel is the most popu...

#helm repo list
NAME            URL                                                 
bitnami         https://charts.bitnami.com/bitnami                  
puppet          https://puppetlabs.github.io/puppetserver-helm-chart
hashicorp       https://helm.releases.hashicorp.com     


Deploy the Apache application on the cluster using the apache from the bitnami repository.

#helm install amaze-surf bitnami/apache
NAME: amaze-surf
LAST DEPLOYED: Thu Sep 19 17:02:14 2024
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
CHART NAME: apache
CHART VERSION: 11.2.20
APP VERSION: 2.4.62

** Please be patient while the chart is being deployed **

1. Get the Apache URL by running:

** Please ensure an external IP is associated to the amaze-surf-apache service before proceeding **
** Watch the status using: kubectl get svc --namespace default -w amaze-surf-apache **

  export SERVICE_IP=$(kubectl get svc --namespace default amaze-surf-apache --template "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}")
  echo URL            : http://$SERVICE_IP/


WARNING: You did not provide a custom web application. Apache will be deployed with a default page. Check the README section "Deploying your custom web application" in https://github.com/bitnami/charts/blob/main/bitnami/apache/README.md#deploying-a-custom-web-application.



WARNING: There are "resources" sections in the chart not set. Using "resourcesPreset" is not recommended for production. For production installations, please set the following values according to your workload needs:
  - resources
+info https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

âš  SECURITY WARNING: Original containers have been substituted. This Helm chart was designed, tested, and validated on multiple platforms using a specific set of Bitnami and Tanzu Application Catalog containers. Substituting other containers is likely to cause degraded security and performance, broken chart features, and missing environment variables.

Substituted images detected:
  - %!s(<nil>)/:%!s(<nil>)



# helm list
NAME            NAMESPACE       REVISION        UPDATED                                  STATUS          CHART           APP VERSION
amaze-surf      default         1               2024-09-19 17:02:14.552210077 +0000 UTC  deployed        apache-11.2.20  2.4.62  


#Uninstall the amaze-surf chart release apache-11.2.20 from the cluster.

#helm uninstall amaze-surf


#helm list
NAME            NAMESPACE       REVISION        UPDATED                                  STATUS          CHART           APP VERSION
dazzling-web    default         2               2024-09-19 17:13:14.377533658 +0000 UTC  deployed        nginx-12.0.5    1.22.0     

# helm upgrade dazzling-web bitnami/nginx --version 13
Release "dazzling-web" has been upgraded. Happy Helming!
NAME: dazzling-web
LAST DEPLOYED: Thu Sep 19 17:14:36 2024
NAMESPACE: default
STATUS: deployed
REVISION: 4
TEST SUITE: None
NOTES:
CHART NAME: nginx
CHART VERSION: 13.2.34
APP VERSION: 1.23.4

#helm rollback dazzling-web
Rollback was a success! Happy Helming!

----------
cat Chart.yaml values.yaml templates/deployment.yaml templates/service.yaml 
apiVersion: v2
appVersion: 1.16.0
description: A Helm chart for Kubernetes
Name: hello-world
type: application
version: 0.1.0
# Default values for hello-world.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.16.0"

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-hello-world
  labels:
    app: hello-world
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-hello-world
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: hello-world
_____________________

OUR OWN CHARTS

Run the following command to create a chart structure 

#helm create /root/webapp-nginx

it creates webapp-nginx
with files

# ls webapp-nginx/
charts  Chart.yaml  templates  values.yaml

#cat  webapp-nginx/Chart.yaml 
apiVersion: v2
name: webapp-nginx
description: A Helm chart for Kubernetes
type: application
version: 0.1.1
appVersion: "1.16.0"

#cat  webapp-nginx/values.yaml 
replicaCount: 1

image:
  repository: nginx
  tag: 1.16.0

service:
  type: ClusterIP
  port: 80

#cat webapp-nginx/templates/{deployment.yaml,service.yaml}
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ .Release.Name }}-nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: {{ .Values.image.repository }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-nginx
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      nodePort: 30080
      name: http
  selector:
    app: nginx



___________________
#helm template /root/webapp   {to check for the files after passing the values how does it looks}

#helm install webapp ./webapp-nginx

##################################
   to see the values
################################

helm get values my-release1 -n isilon | less




